// Egress service for management of storage pools and replicas.
// These are holding the actual user data. From user application the
// data are accessed indirectly through "volume" object (mayastor.see below).
//
// Data are served (mayastor.going out) from replicas/pools where they are
// persistently stored, hence the name "egress".
syntax = "proto3";

package mayastor_service;
import "mayastor.proto";

service Mayastor {
	// Storage pool related methods.
	//
	// Storage pool is made up of block devices disks and provides a storage
	// space for thin provisioning of replicas.

	rpc CreatePool (mayastor.CreatePoolRequest) returns (mayastor.Null) {}
	rpc DestroyPool (mayastor.DestroyPoolRequest) returns (mayastor.Null) {}
	rpc ListPools (mayastor.Null) returns (mayastor.ListPoolsReply) {}

	// Replica related methods.
	//
	// Replica allocates space from storage pool thin provisioning
	// is possible).

	rpc CreateReplica (mayastor.CreateReplicaRequest) returns (mayastor.Null) {}
	rpc DestroyReplica (mayastor.DestroyReplicaRequest) returns (mayastor.Null) {}
	rpc ListReplicas (mayastor.Null) returns (mayastor.ListReplicasReply) {}

	rpc StatReplicas (mayastor.Null) returns (mayastor.StatReplicasReply) {}

	// This method is called by control plane to construct a block device
	// (/dev/...) that will be used to connect the lvol to the OS.
	// Note that for now these are always local.
	rpc CreateBlkdev (mayastor.CreateBlkdevRequest) returns (mayastor.CreateBlkdevReply) {}
	rpc DestroyBlkdev (mayastor.DestroyBlkdevRequest) returns (mayastor.Null) {}

	// export and un-export replica methods will be added later when support for
	// remote replicas is added. Just now the replica must be on the same
	// node as the volume and the application).

	rpc CreateNexus (mayastor.CreateNexusRequest) returns (mayastor.CreateNexusReply){}
	rpc DestroyNexus (mayastor.DestroyNexusRequest) returns (mayastor.Null) {}
	rpc ListNexus (mayastor.Null) returns (mayastor.ListNexusReply) {}
	rpc PublishNexus (mayastor.PublishNexusRequest) returns (mayastor.PublishNexusReply) {}

	// child operations
	rpc ChildOperation(mayastor.ChildNexusRequest) returns (mayastor.ChildNexusReply) {}

}
