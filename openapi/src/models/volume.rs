#![allow(
    clippy::too_many_arguments,
    clippy::new_without_default,
    non_camel_case_types
)]
/*
 * Mayastor RESTful API
 *
 * The version of the OpenAPI document: v0
 *
 * Generated by: https://github.com/openebs/openapi-generator
 */

/// Volume : Volumes   Volume information

/// Volumes   Volume information
#[derive(Clone, Debug, Default, PartialEq, Serialize, Deserialize)]
pub struct Volume {
    /// array of children nexuses
    #[serde(rename = "children")]
    pub children: Vec<crate::models::Nexus>,
    #[serde(rename = "protocol")]
    pub protocol: crate::models::Protocol,
    /// size of the volume in bytes
    #[serde(rename = "size")]
    pub size: i64,
    #[serde(rename = "state")]
    pub state: crate::models::VolumeState,
    /// name of the volume
    #[serde(rename = "uuid")]
    pub uuid: uuid::Uuid,
}

impl Volume {
    /// Volume using only the required fields
    pub fn new(
        children: Vec<crate::models::Nexus>,
        protocol: crate::models::Protocol,
        size: i64,
        state: crate::models::VolumeState,
        uuid: uuid::Uuid,
    ) -> Volume {
        Volume {
            children,
            protocol,
            size,
            state,
            uuid,
        }
    }
    /// Volume using all fields
    pub fn new_all(
        children: Vec<crate::models::Nexus>,
        protocol: crate::models::Protocol,
        size: i64,
        state: crate::models::VolumeState,
        uuid: uuid::Uuid,
    ) -> Volume {
        Volume {
            children,
            protocol,
            size,
            state,
            uuid,
        }
    }
}
