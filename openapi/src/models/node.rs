#![allow(
    clippy::too_many_arguments,
    clippy::new_without_default,
    non_camel_case_types,
    unused_imports
)]
/*
 * Mayastor RESTful API
 *
 * The version of the OpenAPI document: v0
 *
 * Generated by: https://github.com/openebs/openapi-generator
 */

use crate::apis::IntoVec;

/// Node : mayastor storage node information

/// mayastor storage node information
#[derive(Clone, Debug, Default, PartialEq, Serialize, Deserialize)]
pub struct Node {
    /// storage node identifier
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "spec", skip_serializing_if = "Option::is_none")]
    pub spec: Option<crate::models::NodeSpec>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<crate::models::NodeState>,
}

impl Node {
    /// Node using only the required fields
    pub fn new(id: impl Into<String>) -> Node {
        Node {
            id: id.into(),
            spec: None,
            state: None,
        }
    }
    /// Node using all fields
    pub fn new_all(
        id: impl Into<String>,
        spec: impl Into<Option<crate::models::NodeSpec>>,
        state: impl Into<Option<crate::models::NodeState>>,
    ) -> Node {
        Node {
            id: id.into(),
            spec: spec.into(),
            state: state.into(),
        }
    }
}
