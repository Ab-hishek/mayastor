#![allow(
    clippy::too_many_arguments,
    clippy::new_without_default,
    non_camel_case_types
)]
/*
 * Mayastor RESTful API
 *
 * The version of the OpenAPI document: v0
 *
 * Generated by: https://github.com/openebs/openapi-generator
 */

/// Nexus : Nexus information

/// Nexus information
#[derive(Clone, Debug, Default, PartialEq, Serialize, Deserialize)]
pub struct Nexus {
    /// Array of Nexus Children
    #[serde(rename = "children")]
    pub children: Vec<crate::models::Child>,
    /// URI of the device for the volume (missing if not published).  Missing property and empty string are treated the same.
    #[serde(rename = "deviceUri")]
    pub device_uri: String,
    /// id of the mayastor instance
    #[serde(rename = "node")]
    pub node: String,
    /// total number of rebuild tasks
    #[serde(rename = "rebuilds")]
    pub rebuilds: i32,
    #[serde(rename = "share")]
    pub share: crate::models::Protocol,
    /// size of the volume in bytes
    #[serde(rename = "size")]
    pub size: i64,
    #[serde(rename = "state")]
    pub state: crate::models::NexusState,
    /// uuid of the nexus
    #[serde(rename = "uuid")]
    pub uuid: uuid::Uuid,
}

impl Nexus {
    /// Nexus using only the required fields
    pub fn new(
        children: Vec<crate::models::Child>,
        device_uri: String,
        node: String,
        rebuilds: i32,
        share: crate::models::Protocol,
        size: i64,
        state: crate::models::NexusState,
        uuid: uuid::Uuid,
    ) -> Nexus {
        Nexus {
            children,
            device_uri,
            node,
            rebuilds,
            share,
            size,
            state,
            uuid,
        }
    }
    /// Nexus using all fields
    pub fn new_all(
        children: Vec<crate::models::Child>,
        device_uri: String,
        node: String,
        rebuilds: i32,
        share: crate::models::Protocol,
        size: i64,
        state: crate::models::NexusState,
        uuid: uuid::Uuid,
    ) -> Nexus {
        Nexus {
            children,
            device_uri,
            node,
            rebuilds,
            share,
            size,
            state,
            uuid,
        }
    }
}
