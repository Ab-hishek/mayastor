#![allow(
    clippy::too_many_arguments,
    clippy::new_without_default,
    non_camel_case_types
)]
/*
 * Mayastor RESTful API
 *
 * The version of the OpenAPI document: v0
 *
 * Generated by: https://github.com/openebs/openapi-generator
 */

/// Pool : Pool information

/// Pool information
#[derive(Clone, Debug, Default, PartialEq, Serialize, Deserialize)]
pub struct Pool {
    /// size of the pool in bytes
    #[serde(rename = "capacity")]
    pub capacity: i64,
    /// absolute disk paths claimed by the pool
    #[serde(rename = "disks")]
    pub disks: Vec<String>,
    /// id of the pool
    #[serde(rename = "id")]
    pub id: String,
    /// id of the mayastor instance
    #[serde(rename = "node")]
    pub node: String,
    #[serde(rename = "state")]
    pub state: crate::models::PoolState,
    /// used bytes from the pool
    #[serde(rename = "used")]
    pub used: i64,
}

impl Pool {
    /// Pool using only the required fields
    pub fn new(
        capacity: i64,
        disks: Vec<String>,
        id: String,
        node: String,
        state: crate::models::PoolState,
        used: i64,
    ) -> Pool {
        Pool {
            capacity,
            disks,
            id,
            node,
            state,
            used,
        }
    }
    /// Pool using all fields
    pub fn new_all(
        capacity: i64,
        disks: Vec<String>,
        id: String,
        node: String,
        state: crate::models::PoolState,
        used: i64,
    ) -> Pool {
        Pool {
            capacity,
            disks,
            id,
            node,
            state,
            used,
        }
    }
}
