#![allow(
    clippy::too_many_arguments,
    clippy::new_without_default,
    non_camel_case_types,
    unused_imports
)]
/*
 * Mayastor RESTful API
 *
 * The version of the OpenAPI document: v0
 *
 * Generated by: https://github.com/openebs/openapi-generator
 */

use crate::apis::IntoVec;

/// Child : Child information

/// Child information
#[derive(Clone, Debug, Default, PartialEq, Serialize, Deserialize)]
pub struct Child {
    /// current rebuild progress (%)
    #[serde(rename = "rebuildProgress", skip_serializing_if = "Option::is_none")]
    pub rebuild_progress: Option<u8>,
    /// state of the child
    #[serde(rename = "state")]
    pub state: crate::models::ChildState,
    /// uri of the child device
    #[serde(rename = "uri")]
    pub uri: String,
}

impl Child {
    /// Child using only the required fields
    pub fn new(state: impl Into<crate::models::ChildState>, uri: impl Into<String>) -> Child {
        Child {
            rebuild_progress: None,
            state: state.into(),
            uri: uri.into(),
        }
    }
    /// Child using all fields
    pub fn new_all(
        rebuild_progress: impl Into<Option<u8>>,
        state: impl Into<crate::models::ChildState>,
        uri: impl Into<String>,
    ) -> Child {
        Child {
            rebuild_progress: rebuild_progress.into(),
            state: state.into(),
            uri: uri.into(),
        }
    }
}
