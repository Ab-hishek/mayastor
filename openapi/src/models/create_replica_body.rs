#![allow(
    clippy::too_many_arguments,
    clippy::new_without_default,
    non_camel_case_types,
    unused_imports
)]
/*
 * Mayastor RESTful API
 *
 * The version of the OpenAPI document: v0
 *
 * Generated by: https://github.com/openebs/openapi-generator
 */

use crate::apis::IntoVec;

/// CreateReplicaBody : Create Replica Body JSON

/// Create Replica Body JSON
#[derive(Clone, Debug, Default, PartialEq, Serialize, Deserialize)]
pub struct CreateReplicaBody {
    #[serde(rename = "share", skip_serializing_if = "Option::is_none")]
    pub share: Option<crate::models::ReplicaShareProtocol>,
    /// size of the replica in bytes
    #[serde(rename = "size")]
    pub size: u64,
    /// thin provisioning
    #[serde(rename = "thin")]
    pub thin: bool,
}

impl CreateReplicaBody {
    /// CreateReplicaBody using only the required fields
    pub fn new(size: impl Into<u64>, thin: impl Into<bool>) -> CreateReplicaBody {
        CreateReplicaBody {
            share: None,
            size: size.into(),
            thin: thin.into(),
        }
    }
    /// CreateReplicaBody using all fields
    pub fn new_all(
        share: impl Into<Option<crate::models::ReplicaShareProtocol>>,
        size: impl Into<u64>,
        thin: impl Into<bool>,
    ) -> CreateReplicaBody {
        CreateReplicaBody {
            share: share.into(),
            size: size.into(),
            thin: thin.into(),
        }
    }
}
