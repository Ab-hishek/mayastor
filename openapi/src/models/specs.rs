#![allow(
    clippy::too_many_arguments,
    clippy::new_without_default,
    non_camel_case_types
)]
/*
 * Mayastor RESTful API
 *
 * The version of the OpenAPI document: v0
 *
 * Generated by: https://github.com/openebs/openapi-generator
 */

/// Specs : Specs detailing the requested configuration of the objects.

/// Specs detailing the requested configuration of the objects.
#[derive(Clone, Debug, Default, PartialEq, Serialize, Deserialize)]
pub struct Specs {
    /// Nexus Specs
    #[serde(rename = "nexuses")]
    pub nexuses: Vec<crate::models::NexusSpec>,
    /// Pool Specs
    #[serde(rename = "pools")]
    pub pools: Vec<crate::models::PoolSpec>,
    /// Replica Specs
    #[serde(rename = "replicas")]
    pub replicas: Vec<crate::models::ReplicaSpec>,
    /// Volume Specs
    #[serde(rename = "volumes")]
    pub volumes: Vec<crate::models::VolumeSpec>,
}

impl Specs {
    /// Specs using only the required fields
    pub fn new(
        nexuses: Vec<crate::models::NexusSpec>,
        pools: Vec<crate::models::PoolSpec>,
        replicas: Vec<crate::models::ReplicaSpec>,
        volumes: Vec<crate::models::VolumeSpec>,
    ) -> Specs {
        Specs {
            nexuses,
            pools,
            replicas,
            volumes,
        }
    }
    /// Specs using all fields
    pub fn new_all(
        nexuses: Vec<crate::models::NexusSpec>,
        pools: Vec<crate::models::PoolSpec>,
        replicas: Vec<crate::models::ReplicaSpec>,
        volumes: Vec<crate::models::VolumeSpec>,
    ) -> Specs {
        Specs {
            nexuses,
            pools,
            replicas,
            volumes,
        }
    }
}
