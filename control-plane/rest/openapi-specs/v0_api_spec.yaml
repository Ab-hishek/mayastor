---
openapi: 3.0.3
info:
  title: Mayastor RESTful API
  version: v0
servers:
  - url: /v0
paths:
  /nexuses:
    get:
      tags:
        - Nexuses
      operationId: get_nexuses
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Nexus"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nexuses/{nexus_id}":
    get:
      tags:
        - Nexuses
      operationId: get_nexus
      parameters:
        - in: path
          name: nexus_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Nexus"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    delete:
      tags:
        - Nexuses
      operationId: del_nexus
      parameters:
        - in: path
          name: nexus_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: OK
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nexuses/{nexus_id}/children":
    get:
      tags:
        - Children
      operationId: get_nexus_children
      parameters:
        - in: path
          name: nexus_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Child"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nexuses/{nexus_id}/children/{child_id:.*}":
    get:
      tags:
        - Children
      operationId: get_nexus_child
      parameters:
        - in: path
          name: nexus_id
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: "child_id:.*"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Child"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    put:
      tags:
        - Children
      operationId: put_nexus_child
      parameters:
        - in: path
          name: nexus_id
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: "child_id:.*"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Child"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    delete:
      tags:
        - Children
      operationId: del_nexus_child
      parameters:
        - in: path
          name: nexus_id
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: "child_id:.*"
          required: true
          schema:
            type: string
      responses:
        "204":
          description: OK
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  /nodes:
    get:
      tags:
        - Nodes
      operationId: get_nodes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Node"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{id}":
    get:
      tags:
        - Nodes
      operationId: get_node
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Node"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{id}/nexuses":
    get:
      tags:
        - Nexuses
      operationId: get_node_nexuses
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Nexus"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{id}/pools":
    get:
      tags:
        - Pools
      operationId: get_node_pools
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pool"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{id}/replicas":
    get:
      tags:
        - Replicas
      operationId: get_node_replicas
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Replica"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{node_id}/nexuses/{nexus_id}":
    get:
      tags:
        - Nexuses
      operationId: get_node_nexus
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: nexus_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Nexus"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    put:
      tags:
        - Nexuses
      operationId: put_node_nexus
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: nexus_id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNexusBody"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Nexus"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    delete:
      tags:
        - Nexuses
      operationId: del_node_nexus
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: nexus_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: OK
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{node_id}/nexuses/{nexus_id}/children":
    get:
      tags:
        - Children
      operationId: get_node_nexus_children
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: nexus_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Child"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{node_id}/nexuses/{nexus_id}/children/{child_id:.*}":
    get:
      tags:
        - Children
      operationId: get_node_nexus_child
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: nexus_id
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: "child_id:.*"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Child"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    put:
      tags:
        - Children
      operationId: put_node_nexus_child
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: nexus_id
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: "child_id:.*"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Child"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    delete:
      tags:
        - Children
      operationId: del_node_nexus_child
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: nexus_id
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: "child_id:.*"
          required: true
          schema:
            type: string
      responses:
        "204":
          description: OK
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{node_id}/nexuses/{nexus_id}/share":
    delete:
      tags:
        - Nexuses
      operationId: del_node_nexus_shares
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: nexus_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: OK
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{node_id}/nexuses/{nexus_id}/share/{protocol}":
    put:
      tags:
        - Nexuses
      operationId: put_node_nexus_share
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: nexus_id
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: protocol
          required: true
          schema:
            type: string
            enum:
              - nvmf
              - iscsi
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{node_id}/pools/{pool_id}":
    get:
      tags:
        - Pools
      operationId: get_node_pool
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pool"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    put:
      tags:
        - Pools
      operationId: put_node_pool
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePoolBody"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pool"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    delete:
      tags:
        - Pools
      operationId: del_node_pool
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: OK
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{node_id}/pools/{pool_id}/replicas":
    get:
      tags:
        - Replicas
      operationId: get_node_pool_replicas
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Replica"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{node_id}/pools/{pool_id}/replicas/{replica_id}":
    get:
      tags:
        - Replicas
      operationId: get_node_pool_replica
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
        - in: path
          name: replica_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Replica"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    put:
      tags:
        - Replicas
      operationId: put_node_pool_replica
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
        - in: path
          name: replica_id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateReplicaBody"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Replica"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    delete:
      tags:
        - Replicas
      operationId: del_node_pool_replica
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
        - in: path
          name: replica_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: OK
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{node_id}/pools/{pool_id}/replicas/{replica_id}/share":
    delete:
      tags:
        - Replicas
      operationId: del_node_pool_replica_shares
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
        - in: path
          name: replica_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: OK
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{node_id}/pools/{pool_id}/replicas/{replica_id}/share/{protocol}":
    put:
      tags:
        - Replicas
      operationId: put_node_pool_replica_share
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
        - in: path
          name: replica_id
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: protocol
          required: true
          schema:
            type: string
            enum:
              - nvmf
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{node_id}/volumes":
    get:
      tags:
        - Volumes
      operationId: get_node_volumes
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Volume"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{node_id}/volumes/{volume_id}":
    get:
      tags:
        - Volumes
      operationId: get_node_volume
      parameters:
        - in: path
          name: node_id
          required: true
          schema:
            type: string
        - in: path
          name: volume_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volume"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{node}/block_devices":
    get:
      tags:
        - BlockDevices
      operationId: get_node_block_devices
      parameters:
        - in: query
          name: all
          description: specifies whether to list all devices or only usable ones
          schema:
            type: boolean
        - in: path
          name: node
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BlockDevice"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/nodes/{node}/jsongrpc/{method}":
    put:
      tags:
        - JsonGrpc
      operationId: put_node_jsongrpc
      parameters:
        - in: path
          name: node
          required: true
          schema:
            $ref: "#/components/schemas/NodeId"
        - in: path
          name: method
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JsonGeneric"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JsonGeneric"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  /pools:
    get:
      tags:
        - Pools
      operationId: get_pools
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pool"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/pools/{pool_id}":
    get:
      tags:
        - Pools
      operationId: get_pool
      parameters:
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pool"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    delete:
      tags:
        - Pools
      operationId: del_pool
      parameters:
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: OK
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/pools/{pool_id}/replicas/{replica_id}":
    put:
      tags:
        - Replicas
      operationId: put_pool_replica
      parameters:
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
        - in: path
          name: replica_id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateReplicaBody"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Replica"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    delete:
      tags:
        - Replicas
      operationId: del_pool_replica
      parameters:
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
        - in: path
          name: replica_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: OK
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/pools/{pool_id}/replicas/{replica_id}/share":
    delete:
      tags:
        - Replicas
      operationId: del_pool_replica_shares
      parameters:
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
        - in: path
          name: replica_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: OK
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/pools/{pool_id}/replicas/{replica_id}/share/{protocol}":
    put:
      tags:
        - Replicas
      operationId: put_pool_replica_share
      parameters:
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
        - in: path
          name: replica_id
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: protocol
          required: true
          schema:
            type: string
            enum:
              - nvmf
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  /replicas:
    get:
      tags:
        - Replicas
      operationId: get_replicas
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Replica"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/replicas/{id}":
    get:
      tags:
        - Replicas
      operationId: get_replica
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Replica"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  /specs:
    get:
      tags:
        - Specs
      operationId: get_specs
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Specs"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  /volumes:
    get:
      tags:
        - Volumes
      operationId: get_volumes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Volume"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/volumes/{volume_id}":
    get:
      tags:
        - Volumes
      operationId: get_volume
      parameters:
        - in: path
          name: volume_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volume"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    put:
      tags:
        - Volumes
      operationId: put_volume
      parameters:
        - in: path
          name: volume_id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateVolumeBody"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volume"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    delete:
      tags:
        - Volumes
      operationId: del_volume
      parameters:
        - in: path
          name: volume_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: OK
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/volumes/{volume_id}/share/{protocol}":
    put:
      tags:
        - Volumes
      operationId: put_volume_share
      parameters:
        - in: path
          name: volume_id
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: protocol
          required: true
          schema:
            type: string
            enum:
              - nvmf
              - iscsi
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/volumes{volume_id}/share":
    delete:
      tags:
        - Volumes
      operationId: del_shares
      parameters:
        - in: path
          name: volume_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: OK
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
  "/watches/volumes/{volume_id}":
    get:
      tags:
        - Watches
      operationId: get_watch_volume
      parameters:
        - in: path
          name: volume_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RestWatch"
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    put:
      tags:
        - Watches
      operationId: put_watch_volume
      parameters:
        - in: path
          name: volume_id
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: callback
          description: URL callback
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
    delete:
      tags:
        - Watches
      operationId: del_watch_volume
      parameters:
        - in: path
          name: volume_id
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: callback
          description: URL callback
          required: true
          schema:
            type: string
      responses:
        "204":
          description: OK
        "400":
          description: Request Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "408":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "416":
          description: Range Not satisfiable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
        "507":
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestJsonError"
      security:
        - JWT: []
components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    NodeId:
      example: "ksnode-1"
      type: string
      x-rust-wrap: true
    BlockDevice:
      example:
        available: false
        devlinks:
          - ""
        devmajor: 0
        devminor: 0
        devname: ""
        devpath: ""
        devtype: ""
        filesystem:
          fstype: ""
          label: ""
          mountpoint: ""
          uuid: ""
        model: ""
        partition:
          name: ""
          number: 0
          parent: ""
          scheme: ""
          typeid: ""
          uuid: ""
        size: 0
      description: Block device information
      type: object
      properties:
        available:
          description: "identifies if device is available for use (ie. is not \"currently\" in\n use)"
          type: boolean
        devlinks:
          description: list of udev generated symlinks by which device may be identified
          type: array
          items:
            type: string
        devmajor:
          description: major device number
          type: integer
          format: int32
        devminor:
          description: minor device number
          type: integer
          format: int32
        devname:
          description: entry in /dev associated with device
          type: string
        devpath:
          description: official device path
          type: string
        devtype:
          description: "currently \"disk\" or \"partition\""
          type: string
        filesystem:
          example:
            fstype: ""
            label: ""
            mountpoint: ""
            uuid: ""
          description: filesystem information in case where a filesystem is present
          type: object
          properties:
            fstype:
              description: "filesystem type: ext3, ntfs, ..."
              type: string
            label:
              description: volume label
              type: string
            mountpoint:
              description: path where filesystem is currently mounted
              type: string
            uuid:
              description: UUID identifying the volume (filesystem)
              type: string
          required:
            - fstype
            - label
            - mountpoint
            - uuid
        model:
          description: device model - useful for identifying mayastor devices
          type: string
        partition:
          example:
            name: ""
            number: 0
            parent: ""
            scheme: ""
            typeid: ""
            uuid: ""
          description: partition information in case where device represents a partition
          type: object
          properties:
            name:
              description: partition name
              type: string
            number:
              description: partition number
              type: integer
              format: int32
            parent:
              description: devname of parent device to which this partition belongs
              type: string
            scheme:
              description: "partition scheme: gpt, dos, ..."
              type: string
            typeid:
              description: partition type identifier
              type: string
            uuid:
              description: UUID identifying partition
              type: string
          required:
            - name
            - number
            - parent
            - scheme
            - typeid
            - uuid
        size:
          description: size of device in (512 byte) blocks
          type: integer
          format: int64
      required:
        - available
        - devlinks
        - devmajor
        - devminor
        - devname
        - devpath
        - devtype
        - filesystem
        - model
        - partition
        - size
    Child:
      example:
        rebuildProgress: ~
        state: Unknown
        uri: ""
      description: Child information
      type: object
      properties:
        rebuildProgress:
          description: current rebuild progress (%)
          type: integer
          format: int32
        state:
          description: state of the child
          type: string
          enum:
            - Unknown
            - Online
            - Degraded
            - Faulted
        uri:
          description: uri of the child device
          type: string
      required:
        - state
        - uri
    CreateNexusBody:
      example:
        children:
          - ""
        size: 0
      description: Create Nexus Body JSON
      type: object
      properties:
        children:
          description: "replica can be iscsi and nvmf remote targets or a local spdk bdev\n (i.e. bdev:///name-of-the-bdev).\n\n uris to the targets we connect to"
          type: array
          items:
            type: string
        size:
          description: size of the device in bytes
          type: integer
          format: int64
      required:
        - children
        - size
    CreatePoolBody:
      example:
        disks:
          - "malloc:///disk?size_mb=100"
      description: Create Pool Body JSON
      type: object
      properties:
        disks:
          description: disk device paths or URIs to be claimed by the pool
          type: array
          items:
            example: "malloc:///disk?size_mb=100"
            description: "Pool device URI\n Can be specified in the form of a file path or a URI\n eg: /dev/sda, aio:///dev/sda, malloc:///disk?size_mb=100"
            type: string
      required:
        - disks
    CreateReplicaBody:
      example:
        share: "off"
        size: 0
        thin: false
      description: Create Replica Body JSON
      type: object
      properties:
        share:
          description: protocol to expose the replica over
          type: string
          enum:
            - off
            - nvmf
            - iscsi
            - nbd
        size:
          description: size of the replica in bytes
          type: integer
          format: int64
        thin:
          description: thin provisioning
          type: boolean
      required:
        - share
        - size
        - thin
    CreateVolumeBody:
      example:
        policy:
          self_heal: false
          topology: ~
        replicas: 0
        size: 0
        topology:
          explicit: ~
          labelled: ~
      description: Create Volume Body JSON
      type: object
      properties:
        policy:
          example:
            self_heal: false
            topology: ~
          description: Volume Healing policy used to determine if and how to replace a replica
          type: object
          properties:
            self_heal:
              description: "the server will attempt to heal the volume by itself\n the client should not attempt to do the same if this is enabled"
              type: boolean
            topology:
              example:
                explicit: ~
                labelled: ~
              description: "topology to choose a replacement replica for self healing\n (overrides the initial creation topology)"
              type: object
              properties:
                explicit:
                  example:
                    allowed_nodes:
                      - ""
                    preferred_nodes:
                      - ""
                  description: "volume topology, explicitly selected"
                  type: object
                  properties:
                    allowed_nodes:
                      description: replicas can only be placed on these nodes
                      type: array
                      items:
                        type: string
                    preferred_nodes:
                      description: preferred nodes to place the replicas
                      type: array
                      items:
                        type: string
                  required:
                    - allowed_nodes
                    - preferred_nodes
                labelled:
                  example:
                    node_topology:
                      exclusion:
                        - ""
                      inclusion:
                        - ""
                    pool_topology:
                      inclusion:
                        - ""
                  description: volume topology using labels
                  type: object
                  properties:
                    node_topology:
                      example:
                        exclusion:
                          - ""
                        inclusion:
                          - ""
                      description: node topology
                      type: object
                      properties:
                        exclusion:
                          description: exclusive labels
                          type: array
                          items:
                            example: ""
                            description: "Excludes resources with the same $label name, eg:\n \"Zone\" would not allow for resources with the same \"Zone\" value\n to be used for a certain operation, eg:\n A node with \"Zone: A\" would not be paired up with a node with \"Zone: A\",\n but it could be paired up with a node with \"Zone: B\"\n exclusive label NAME in the form \"NAME\", and not \"NAME: VALUE\""
                            type: string
                        inclusion:
                          description: inclusive labels
                          type: array
                          items:
                            example: ""
                            description: "Includes resources with the same $label or $label:$value eg:\n if label is \"Zone: A\":\n A resource with \"Zone: A\" would be paired up with a resource with \"Zone: A\",\n but not with a resource with \"Zone: B\"\n if label is \"Zone\":\n A resource with \"Zone: A\" would be paired up with a resource with \"Zone: B\",\n but not with a resource with \"OtherLabel: B\"\n inclusive label key value in the form \"NAME: VALUE\""
                            type: string
                      required:
                        - exclusion
                        - inclusion
                    pool_topology:
                      example:
                        inclusion:
                          - ""
                      description: pool topology
                      type: object
                      properties:
                        inclusion:
                          description: inclusive labels
                          type: array
                          items:
                            example: ""
                            description: "Includes resources with the same $label or $label:$value eg:\n if label is \"Zone: A\":\n A resource with \"Zone: A\" would be paired up with a resource with \"Zone: A\",\n but not with a resource with \"Zone: B\"\n if label is \"Zone\":\n A resource with \"Zone: A\" would be paired up with a resource with \"Zone: B\",\n but not with a resource with \"OtherLabel: B\"\n inclusive label key value in the form \"NAME: VALUE\""
                            type: string
                      required:
                        - inclusion
                  required:
                    - node_topology
                    - pool_topology
          required:
            - self_heal
        replicas:
          description: number of storage replicas
          type: integer
          format: int64
        size:
          description: size of the volume in bytes
          type: integer
          format: int64
        topology:
          example:
            explicit: ~
            labelled: ~
          description: "Volume topology used to determine how to place/distribute the data\n Should either be labelled or explicit, not both.\n If neither is used then the control plane will select from all available resources."
          type: object
          properties:
            explicit:
              example:
                allowed_nodes:
                  - ""
                preferred_nodes:
                  - ""
              description: "volume topology, explicitly selected"
              type: object
              properties:
                allowed_nodes:
                  description: replicas can only be placed on these nodes
                  type: array
                  items:
                    type: string
                preferred_nodes:
                  description: preferred nodes to place the replicas
                  type: array
                  items:
                    type: string
              required:
                - allowed_nodes
                - preferred_nodes
            labelled:
              example:
                node_topology:
                  exclusion:
                    - ""
                  inclusion:
                    - ""
                pool_topology:
                  inclusion:
                    - ""
              description: volume topology using labels
              type: object
              properties:
                node_topology:
                  example:
                    exclusion:
                      - ""
                    inclusion:
                      - ""
                  description: node topology
                  type: object
                  properties:
                    exclusion:
                      description: exclusive labels
                      type: array
                      items:
                        example: ""
                        description: "Excludes resources with the same $label name, eg:\n \"Zone\" would not allow for resources with the same \"Zone\" value\n to be used for a certain operation, eg:\n A node with \"Zone: A\" would not be paired up with a node with \"Zone: A\",\n but it could be paired up with a node with \"Zone: B\"\n exclusive label NAME in the form \"NAME\", and not \"NAME: VALUE\""
                        type: string
                    inclusion:
                      description: inclusive labels
                      type: array
                      items:
                        example: ""
                        description: "Includes resources with the same $label or $label:$value eg:\n if label is \"Zone: A\":\n A resource with \"Zone: A\" would be paired up with a resource with \"Zone: A\",\n but not with a resource with \"Zone: B\"\n if label is \"Zone\":\n A resource with \"Zone: A\" would be paired up with a resource with \"Zone: B\",\n but not with a resource with \"OtherLabel: B\"\n inclusive label key value in the form \"NAME: VALUE\""
                        type: string
                  required:
                    - exclusion
                    - inclusion
                pool_topology:
                  example:
                    inclusion:
                      - ""
                  description: pool topology
                  type: object
                  properties:
                    inclusion:
                      description: inclusive labels
                      type: array
                      items:
                        example: ""
                        description: "Includes resources with the same $label or $label:$value eg:\n if label is \"Zone: A\":\n A resource with \"Zone: A\" would be paired up with a resource with \"Zone: A\",\n but not with a resource with \"Zone: B\"\n if label is \"Zone\":\n A resource with \"Zone: A\" would be paired up with a resource with \"Zone: B\",\n but not with a resource with \"OtherLabel: B\"\n inclusive label key value in the form \"NAME: VALUE\""
                        type: string
                  required:
                    - inclusion
              required:
                - node_topology
                - pool_topology
      required:
        - policy
        - replicas
        - size
        - topology
    JsonGeneric:
      description: "Generic JSON value eg: { \"size\": 1024 }"
      type: object
    Nexus:
      example:
        children:
          - rebuildProgress: ~
            state: Unknown
            uri: ""
        deviceUri: ""
        node: ""
        rebuilds: 0
        share: "off"
        size: 0
        state: Unknown
        uuid: 514ed1c8-7174-49ac-b9cd-ad44ef670a67
      description: Nexus information
      type: object
      properties:
        children:
          description: array of children
          type: array
          items:
            example:
              rebuildProgress: ~
              state: Unknown
              uri: ""
            description: Child information
            type: object
            properties:
              rebuildProgress:
                description: current rebuild progress (%)
                type: integer
                format: int32
              state:
                description: state of the child
                type: string
                enum:
                  - Unknown
                  - Online
                  - Degraded
                  - Faulted
              uri:
                description: uri of the child device
                type: string
            required:
              - state
              - uri
        deviceUri:
          description: "URI of the device for the volume (missing if not published).\n Missing property and empty string are treated the same."
          type: string
        node:
          description: id of the mayastor instance
          type: string
        rebuilds:
          description: total number of rebuild tasks
          type: integer
          format: int32
        share:
          description: protocol used for exposing the nexus
          type: string
          enum:
            - off
            - nvmf
            - iscsi
            - nbd
        size:
          description: size of the volume in bytes
          type: integer
          format: int64
        state:
          description: current state of the nexus
          type: string
          enum:
            - Unknown
            - Online
            - Degraded
            - Faulted
        uuid:
          description: uuid of the nexus
          type: string
          format: uuid
      required:
        - children
        - deviceUri
        - node
        - rebuilds
        - share
        - size
        - state
        - uuid
    Node:
      example:
        grpcEndpoint: ""
        id: ""
        state: Unknown
      description: Node information
      type: object
      properties:
        grpcEndpoint:
          description: grpc_endpoint of the mayastor instance
          type: string
        id:
          description: id of the mayastor instance
          type: string
        state:
          description: deemed state of the node
          type: string
          enum:
            - Unknown
            - Online
            - Offline
      required:
        - grpcEndpoint
        - id
        - state
    Pool:
      example:
        capacity: 0
        disks:
          - "malloc:///disk?size_mb=100"
        id: ""
        node: ""
        state: Unknown
        used: 0
      description: Pool information
      type: object
      properties:
        capacity:
          description: size of the pool in bytes
          type: integer
          format: int64
        disks:
          description: absolute disk paths claimed by the pool
          type: array
          items:
            example: "malloc:///disk?size_mb=100"
            description: "Pool device URI\n Can be specified in the form of a file path or a URI\n eg: /dev/sda, aio:///dev/sda, malloc:///disk?size_mb=100"
            type: string
        id:
          description: id of the pool
          type: string
        node:
          description: id of the mayastor instance
          type: string
        state:
          description: current state of the pool
          type: string
          enum:
            - Unknown
            - Online
            - Degraded
            - Faulted
        used:
          description: used bytes from the pool
          type: integer
          format: int64
      required:
        - capacity
        - disks
        - id
        - node
        - state
        - used
    Replica:
      example:
        node: ""
        pool: ""
        share: "off"
        size: 0
        state: unknown
        thin: false
        uri: ""
        uuid: 514ed1c8-7174-49ac-b9cd-ad44ef670a67
      description: Replica information
      type: object
      properties:
        node:
          description: id of the mayastor instance
          type: string
        pool:
          description: id of the pool
          type: string
        share:
          description: protocol used for exposing the replica
          type: string
          enum:
            - off
            - nvmf
            - iscsi
            - nbd
        size:
          description: size of the replica in bytes
          type: integer
          format: int64
        state:
          description: state of the replica
          type: string
          enum:
            - unknown
            - online
            - degraded
            - faulted
        thin:
          description: thin provisioning
          type: boolean
        uri:
          description: uri usable by nexus to access it
          type: string
        uuid:
          description: uuid of the replica
          type: string
          format: uuid
      required:
        - node
        - pool
        - share
        - size
        - state
        - thin
        - uri
        - uuid
    RestJsonError:
      example:
        details: ""
        kind: NotFound
      description: Rest Json Error format
      type: object
      properties:
        details:
          description: detailed error information
          type: string
        kind:
          description: error kind
          type: string
          enum:
            - Timeout
            - Deserialize
            - Internal
            - InvalidArgument
            - DeadlineExceeded
            - NotFound
            - AlreadyExists
            - PermissionDenied
            - ResourceExhausted
            - FailedPrecondition
            - NotShared
            - NotPublished
            - AlreadyPublished
            - AlreadyShared
            - Aborted
            - OutOfRange
            - Unimplemented
            - Unavailable
            - Unauthenticated
            - Unauthorized
            - Conflict
            - FailedPersist
            - Deleting
      required:
        - details
        - kind
    RestWatch:
      example:
        callback: ""
        resource: ""
      description: Watch Resource in the store
      type: object
      properties:
        callback:
          description: callback used to notify the watcher of a change
          type: string
        resource:
          description: id of the resource to watch on
          type: string
      required:
        - callback
        - resource
    Specs:
      example:
        nexuses:
          - children:
              - ""
            managed: false
            node: ""
            operation: ~
            owner: ~
            share: "off"
            size: 0
            state: Unknown
            uuid: 514ed1c8-7174-49ac-b9cd-ad44ef670a67
        pools:
          - disks:
              - "malloc:///disk?size_mb=100"
            id: ""
            labels:
              - ""
            node: ""
            operation: ~
            state: Unknown
        replicas:
          - managed: false
            operation: ~
            owners:
              nexuses:
                - 514ed1c8-7174-49ac-b9cd-ad44ef670a67
              volume: ~
            pool: ""
            share: "off"
            size: 0
            state: Unknown
            thin: false
            uuid: 514ed1c8-7174-49ac-b9cd-ad44ef670a67
        volumes:
          - labels:
              - ""
            num_paths: 0
            num_replicas: 0
            operation: ~
            protocol: "off"
            size: 0
            state: Unknown
            target_node: ~
            uuid: 514ed1c8-7174-49ac-b9cd-ad44ef670a67
      description: Specs detailing the requested configuration of the objects.
      type: object
      properties:
        nexuses:
          description: nexus specs
          type: array
          items:
            example:
              children:
                - ""
              managed: false
              node: ""
              operation: ~
              owner: ~
              share: "off"
              size: 0
              state: Unknown
              uuid: 514ed1c8-7174-49ac-b9cd-ad44ef670a67
            description: User specification of a nexus.
            type: object
            properties:
              children:
                description: List of children.
                type: array
                items:
                  type: string
              managed:
                description: Managed by our control plane
                type: boolean
              node:
                description: Node where the nexus should live.
                type: string
              operation:
                example:
                  operation: Unknown
                  result: ~
                description: Record of the operation in progress
                type: object
                properties:
                  operation:
                    description: Record of the operation
                    type: string
                    enum:
                      - Unknown
                      - Create
                      - Destroy
                      - Share
                      - Unshare
                      - AddChild
                      - RemoveChild
                  result:
                    description: Result of the operation
                    type: boolean
                required:
                  - operation
              owner:
                description: "Volume which owns this nexus, if any"
                type: string
                format: uuid
              share:
                description: Share Protocol
                type: string
                enum:
                  - off
                  - nvmf
                  - iscsi
                  - nbd
              size:
                description: Size of the nexus.
                type: integer
                format: int64
              state:
                description: The state the nexus should eventually reach.
                type: string
                enum:
                  - Unknown
                  - Creating
                  - Created
                  - Deleting
                  - Deleted
              uuid:
                description: Nexus Id
                type: string
                format: uuid
            required:
              - children
              - managed
              - node
              - share
              - size
              - state
              - uuid
        pools:
          description: pool specs
          type: array
          items:
            example:
              disks:
                - "malloc:///disk?size_mb=100"
              id: ""
              labels:
                - ""
              node: ""
              operation: ~
              state: Unknown
            description: User specification of a pool.
            type: object
            properties:
              disks:
                description: absolute disk paths claimed by the pool
                type: array
                items:
                  example: "malloc:///disk?size_mb=100"
                  description: "Pool device URI\n Can be specified in the form of a file path or a URI\n eg: /dev/sda, aio:///dev/sda, malloc:///disk?size_mb=100"
                  type: string
              id:
                description: id of the pool
                type: string
              labels:
                description: Pool labels.
                type: array
                items:
                  type: string
              node:
                description: id of the mayastor instance
                type: string
              operation:
                example:
                  operation: Unknown
                  result: ~
                description: Record of the operation in progress
                type: object
                properties:
                  operation:
                    description: Record of the operation
                    type: string
                    enum:
                      - Unknown
                      - Create
                      - Destroy
                  result:
                    description: Result of the operation
                    type: boolean
                required:
                  - operation
              state:
                description: state of the pool
                type: string
                enum:
                  - Unknown
                  - Creating
                  - Created
                  - Deleting
                  - Deleted
            required:
              - disks
              - id
              - labels
              - node
              - state
        replicas:
          description: replica specs
          type: array
          items:
            example:
              managed: false
              operation: ~
              owners:
                nexuses:
                  - 514ed1c8-7174-49ac-b9cd-ad44ef670a67
                volume: ~
              pool: ""
              share: "off"
              size: 0
              state: Unknown
              thin: false
              uuid: 514ed1c8-7174-49ac-b9cd-ad44ef670a67
            description: User specification of a replica.
            type: object
            properties:
              managed:
                description: Managed by our control plane
                type: boolean
              operation:
                example:
                  operation: Unknown
                  result: ~
                description: Record of the operation in progress
                type: object
                properties:
                  operation:
                    description: Record of the operation
                    type: string
                    enum:
                      - Unknown
                      - Create
                      - Destroy
                      - Share
                      - Unshare
                  result:
                    description: Result of the operation
                    type: boolean
                required:
                  - operation
              owners:
                example:
                  nexuses:
                    - 514ed1c8-7174-49ac-b9cd-ad44ef670a67
                  volume: ~
                description: Owner Resource
                type: object
                properties:
                  nexuses:
                    type: array
                    items:
                      type: string
                      format: uuid
                  volume:
                    type: string
                    format: uuid
                required:
                  - nexuses
              pool:
                description: The pool that the replica should live on.
                type: string
              share:
                description: Protocol used for exposing the replica.
                type: string
                enum:
                  - off
                  - nvmf
                  - iscsi
                  - nbd
              size:
                description: The size that the replica should be.
                type: integer
                format: int64
              state:
                description: The state that the replica should eventually achieve.
                type: string
                enum:
                  - Unknown
                  - Creating
                  - Created
                  - Deleting
                  - Deleted
              thin:
                description: Thin provisioning.
                type: boolean
              uuid:
                description: uuid of the replica
                type: string
                format: uuid
            required:
              - managed
              - owners
              - pool
              - share
              - size
              - state
              - thin
              - uuid
        volumes:
          description: volume specs
          type: array
          items:
            example:
              labels:
                - ""
              num_paths: 0
              num_replicas: 0
              operation: ~
              protocol: "off"
              size: 0
              state: Unknown
              target_node: ~
              uuid: 514ed1c8-7174-49ac-b9cd-ad44ef670a67
            description: User specification of a volume.
            type: object
            properties:
              labels:
                description: Volume labels.
                type: array
                items:
                  type: string
              num_paths:
                description: Number of front-end paths.
                type: integer
                format: int32
              num_replicas:
                description: Number of children the volume should have.
                type: integer
                format: int32
              operation:
                example:
                  operation: Unknown
                  result: ~
                description: Record of the operation in progress
                type: object
                properties:
                  operation:
                    description: Record of the operation
                    type: string
                    enum:
                      - Unknown
                      - Create
                      - Destroy
                      - Share
                      - Unshare
                      - AddReplica
                      - RemoveReplica
                      - Publish
                      - Unpublish
                  result:
                    description: Result of the operation
                    type: boolean
                required:
                  - operation
              protocol:
                description: Protocol that the volume should be shared over.
                type: string
                enum:
                  - off
                  - nvmf
                  - iscsi
                  - nbd
              size:
                description: Size that the volume should be.
                type: integer
                format: int64
              state:
                description: State that the volume should eventually achieve.
                type: string
                enum:
                  - Unknown
                  - Creating
                  - Created
                  - Deleting
                  - Deleted
              target_node:
                description: The node where front-end IO will be sent to
                type: string
              uuid:
                description: Volume Id
                type: string
                format: uuid
            required:
              - labels
              - num_paths
              - num_replicas
              - protocol
              - size
              - state
              - uuid
      required:
        - nexuses
        - pools
        - replicas
        - volumes
    Volume:
      example:
        children:
          - children:
              - rebuildProgress: ~
                state: Unknown
                uri: ""
            deviceUri: ""
            node: ""
            rebuilds: 0
            share: "off"
            size: 0
            state: Unknown
            uuid: 514ed1c8-7174-49ac-b9cd-ad44ef670a67
        protocol: "off"
        size: 0
        state: Unknown
        uuid: 514ed1c8-7174-49ac-b9cd-ad44ef670a67
      description: "Volumes\n\n Volume information"
      type: object
      properties:
        children:
          description: array of children nexuses
          type: array
          items:
            example:
              children:
                - rebuildProgress: ~
                  state: Unknown
                  uri: ""
              deviceUri: ""
              node: ""
              rebuilds: 0
              share: "off"
              size: 0
              state: Unknown
              uuid: 514ed1c8-7174-49ac-b9cd-ad44ef670a67
            description: Nexus information
            type: object
            properties:
              children:
                description: array of children
                type: array
                items:
                  example:
                    rebuildProgress: ~
                    state: Unknown
                    uri: ""
                  description: Child information
                  type: object
                  properties:
                    rebuildProgress:
                      description: current rebuild progress (%)
                      type: integer
                      format: int32
                    state:
                      description: state of the child
                      type: string
                      enum:
                        - Unknown
                        - Online
                        - Degraded
                        - Faulted
                    uri:
                      description: uri of the child device
                      type: string
                  required:
                    - state
                    - uri
              deviceUri:
                description: "URI of the device for the volume (missing if not published).\n Missing property and empty string are treated the same."
                type: string
              node:
                description: id of the mayastor instance
                type: string
              rebuilds:
                description: total number of rebuild tasks
                type: integer
                format: int32
              share:
                description: protocol used for exposing the nexus
                type: string
                enum:
                  - off
                  - nvmf
                  - iscsi
                  - nbd
              size:
                description: size of the volume in bytes
                type: integer
                format: int64
              state:
                description: current state of the nexus
                type: string
                enum:
                  - Unknown
                  - Online
                  - Degraded
                  - Faulted
              uuid:
                description: uuid of the nexus
                type: string
                format: uuid
            required:
              - children
              - deviceUri
              - node
              - rebuilds
              - share
              - size
              - state
              - uuid
        protocol:
          description: current share protocol
          type: string
          enum:
            - off
            - nvmf
            - iscsi
            - nbd
        size:
          description: size of the volume in bytes
          type: integer
          format: int64
        state:
          description: current state of the volume
          type: string
          enum:
            - Unknown
            - Online
            - Degraded
            - Faulted
        uuid:
          description: name of the volume
          type: string
          format: uuid
      required:
        - children
        - protocol
        - size
        - state
        - uuid
