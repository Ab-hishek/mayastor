[env]
REV_TAG = { script = ["git rev-parse --short HEAD"] }

[tasks.deps]
script = [
	"git submodule update --init --recursive",
	"sudo apt-get update",
	"sudo ./spdk-sys/spdk/scripts/pkgdep.sh",
	"sudo pip install --upgrade pip",
	# nasm is optional dep of spdk so it must be installed explicitly
	"sudo apt-get install nasm",
	"sudo apt-get install docker.io libblkid-dev xfsprogs",
	"sudo curl -sL https://deb.nodesource.com/setup_10.x -sSf | sudo bash",
	"sudo apt install nodejs",
	"sudo npm install -g jshint prettier"
]
workspace = false

[tasks.setup]
script = [
	"sudo sysctl -w vm.nr_hugepages=512",
	"sudo -E ./spdk-sys/spdk/scripts/setup.sh",
	"sudo modprobe nbd"
]
workspace = false

[tasks.bootstrap]
script = [
	"rustup component add rustfmt",
	"rustup component add clippy"
]
dependencies = [
	"deps",
	"setup",
]
workspace = false

[tasks.style-rust]
script = ["cargo fmt --all"]
workspace = false

[tasks.lint-rust]
script = ["cargo clippy --all --all-features --all-targets -- -D warnings"]
workspace = false

[tasks.style-js]
script = [
  "prettier --version",
  "prettier --config .prettierrc --check csi/moac/*.js mayastor-test/*.js"
]
workspace = false

[tasks.lint-js]
script = ["jshint --config .jshintrc csi/moac/*.js mayastor-test/*.js"]
workspace = false

[tasks.clean-moac]
script = ["rm -rf csi/moac/node_modules"]

[tasks.clean-rust]
command = "cargo"
args = ["clean"]

[tasks.clean-spdk]
script = [
'''
cd spdk-sys/spdk || exit 1;
make clean;
rm -f dpdk/config/defconfig_x86_64-nhm-linuxapp-gcc
'''
]
workspace = false

[tasks.clean-test]
script = ["rm -rf mayastor-test/node_modules"]
workspace = false

[tasks.clean]
dependencies = [
	"clean-rust",
	"clean-spdk",
	"clean-test",
	"clean-moac"
]
workspace = false

[tasks.build-moac]
script = ["cd csi/moac && npm install"]
workspace = false

[tasks.build-spdk]
script = ["./spdk-sys/build.sh --enable-debug --with-isal --with-crypto"]
workspace = false

[tasks.build-spdk-release]
script = [
  "make -C spdk-sys/spdk clean",
	"./spdk-sys/build.sh --with-isal --with-crypto"
]
workspace = false

[tasks.install-spdk]
script = [
	"sudo make -C spdk-sys/spdk install",
	"sudo cp spdk-sys/build/libspdk_fat.so /usr/lib/"
]
workspace = false

# build spdk lib, install it and then build everything else
[tasks.build]
command = "cargo"
args = ["build", "--all-targets"]
dependencies = ["build-moac", "build-spdk", "install-spdk"]
workspace = false

[tasks.build-release]
command = "cargo"
args = ["build", "--all", "--release"]
dependencies = ["clean", "build-moac", "build-spdk-release", "install-spdk"]
workspace = false

[tasks.unit-test]
command = "cargo"
args = ["test", "--all"]
workspace = false

[tasks.cli-test]
script = [
'''
cd mayastor-test || exit 1;
[ -d node_modules ] || npm install || exit 1;
npm test
'''
]
workspace = false

[tasks.docker]
script = [
'''
docker build \
  -t mayadata/mayastor:dev-${REV_TAG} \
  -f mayastor/Dockerfile . &&
docker build \
	-t mayadata/mayastor-client:dev-${REV_TAG} \
  -f mayastor-client/Dockerfile . &&
docker build \
	-t mayadata/moac:dev-${REV_TAG} \
  -f moac/Dockerfile .
'''
]
workspace = false

[tasks.docker-push]
script = [
'''
read -p "$(tput setaf 3) You are about to push changes to all three mayastor images on docker hub, continue? (y/n)?($tput sgr0)" c
	case "$c" in
	y|Y)
		docker push mayadata/mayastor:dev-${REV_TAG} &&
		docker push mayadata/mayastor-client:dev-${REV_TAG} &&
		docker push mayadata/moac:dev-${REV_TAG}
		;;
	*) echo "Smart, it could create problems and then you own it!";;
	esac
'''
]
dependencies = ["docker"]
workspace = false

[tasks.pre-check]
dependencies = [
	"style-rust",
	"style-js",
	"lint-rust",
	"lint-js"
]
workspace = false

[tasks.ci-flow]
dependencies = [
	"bootstrap",
  "pre-check",
	"docker"
]
command = "docker"
args = [
	"run",
	"-i",
	"-t",
	"--privileged",
	"--shm-size=1g",
	"-v", "/dev:/dev",
	"--entrypoint",
	"test_rpc.sh",
	"mayadata/mayastor:dev-${REV_TAG}"
]
workspace = false

[tasks.buildah-create]
script = [
'''
docker build -t mayadata/buildah:latest -f docker/Dockerfile.buildah .
'''
]
workspace = false

[tasks.buildah-push]
script = [
'''
read -p "$(tput setaf 3) You are about to push changes if any to the buildah:latest image, continue? (y/n)?($tput sgr0)" c
	case "$c" in
	y|Y) docker push mayadata/buildah:latest;;
	*) echo "Smart, it could create problems and then you own it!";;
	esac
'''
]
dependencies = ["buildah-create"]
workspace = false

[tasks.ms-buildenv-create]
script = [
'''
docker build -t mayadata/ms-buildenv:latest -f docker/Dockerfile.ms-buildenv .
'''
]
workspace = false

[tasks.ms-buildenv-push]
script = [
'''
read -p "$(tput setaf 3) You are about to push changes if any to the ms-buildenv:latest image, continue? (y/n)?($tput sgr0)" c
	case "$c" in
	y|Y) docker push mayadata/ms-buildenv:latest;;
	*) echo "Smart, it could create problems and then you own it!";;
	esac
'''
]
dependencies = ["ms-buildenv-create"]
workspace = false

[tasks.ms-buildenv-build]
command = "./tools/devtool"
args = ["-y", "build"]
workspace = false
